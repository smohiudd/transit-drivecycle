{
 "Resources": {
  "vpcA2121C38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/Resource"
   }
  },
  "vpcPublicSubnet1Subnet2E65531E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet1/Subnet"
   }
  },
  "vpcPublicSubnet1RouteTable48A2DF9B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet1/RouteTable"
   }
  },
  "vpcPublicSubnet1RouteTableAssociation5D3F4579": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet1Subnet2E65531E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "vpcPublicSubnet1DefaultRoute10708846": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "vpcPublicSubnet1EIPDA49DCBE": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet1/EIP"
   }
  },
  "vpcPublicSubnet1NATGateway9C16659E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet1EIPDA49DCBE",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet1Subnet2E65531E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet1DefaultRoute10708846",
    "vpcPublicSubnet1RouteTableAssociation5D3F4579"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet1/NATGateway"
   }
  },
  "vpcPublicSubnet2Subnet009B674F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet2/Subnet"
   }
  },
  "vpcPublicSubnet2RouteTableEB40D4CB": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet2/RouteTable"
   }
  },
  "vpcPublicSubnet2RouteTableAssociation21F81B59": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet2Subnet009B674F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "vpcPublicSubnet2DefaultRouteA1EC0F60": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "vpcPublicSubnet2EIP9B3743B1": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet2/EIP"
   }
  },
  "vpcPublicSubnet2NATGateway9B8AE11A": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet2EIP9B3743B1",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet2Subnet009B674F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet2DefaultRouteA1EC0F60",
    "vpcPublicSubnet2RouteTableAssociation21F81B59"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PublicSubnet2/NATGateway"
   }
  },
  "vpcPrivateSubnet1Subnet934893E8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet1/Subnet"
   }
  },
  "vpcPrivateSubnet1RouteTableB41A48CC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet1/RouteTable"
   }
  },
  "vpcPrivateSubnet1RouteTableAssociation67945127": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet1Subnet934893E8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "vpcPrivateSubnet1DefaultRoute1AA8E2E5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet1NATGateway9C16659E"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "vpcPrivateSubnet2Subnet7031C2BA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet2/Subnet"
   }
  },
  "vpcPrivateSubnet2RouteTable7280F23E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet2/RouteTable"
   }
  },
  "vpcPrivateSubnet2RouteTableAssociation007E94D3": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "vpcPrivateSubnet2DefaultRouteB0E07F99": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "vpcIGWE57CBDCA": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "transit-drivecycle/vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/IGW"
   }
  },
  "vpcVPCGW7984C166": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/vpc/VPCGW"
   }
  },
  "Ec2ClusterEE43E89D": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/Ec2Cluster/Resource"
   }
  },
  "execrolePolicy25C0F069": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "apidefinitionapicontainerLogGroup40430C63",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "valhalladefinitionvalhallacontainerLogGroup568AA80C",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "frontendTaskDefwebLogGroup9A2D3B2E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "execrolePolicy25C0F069",
    "Roles": [
     "ecsTaskExecutionRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/exec-role/Policy/Resource"
   }
  },
  "apidefinitionTaskRole825DBF21": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/api-definition/TaskRole/Resource"
   }
  },
  "apidefinitionAA41D8E5": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:266ef991bbfc50c74e6bb17edb35de5f86c5881d3a8a7cbb82730929195c0bf8"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "apidefinitionapicontainerLogGroup40430C63"
        },
        "awslogs-stream-prefix": "drivecycleapi",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "api-container",
      "PortMappings": [
       {
        "ContainerPort": 81,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/ecsTaskExecutionRole"
      ]
     ]
    },
    "Family": "transitdrivecycleapidefinition20C6D309",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "apidefinitionTaskRole825DBF21",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/api-definition/Resource"
   }
  },
  "apidefinitionapicontainerLogGroup40430C63": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/api-definition/api-container/LogGroup/Resource"
   }
  },
  "apifargateServiceCC5E4B61": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "Ec2ClusterEE43E89D"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "apifargateSecurityGroupC585A569",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "vpcPrivateSubnet1Subnet934893E8"
       },
       {
        "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "apidefinitionAA41D8E5"
    }
   },
   "DependsOn": [
    "apidefinitionTaskRole825DBF21"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/api-fargate/Service"
   }
  },
  "apifargateSecurityGroupC585A569": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "transit-drivecycle/api-fargate/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "DependsOn": [
    "apidefinitionTaskRole825DBF21"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/api-fargate/SecurityGroup/Resource"
   }
  },
  "valhalladefinitionTaskRole432BE949": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/valhalla-definition/TaskRole/Resource"
   }
  },
  "valhalladefinitionC2668EC9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:599d69602fd9897faa9c7d9ec432395ce36273c11f8277d36b8559c480656d7c"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "valhalladefinitionvalhallacontainerLogGroup568AA80C"
        },
        "awslogs-stream-prefix": "valhalla",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "valhalla-container",
      "PortMappings": [
       {
        "ContainerPort": 8002,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/ecsTaskExecutionRole"
      ]
     ]
    },
    "Family": "transitdrivecyclevalhalladefinitionC1EEE589",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "valhalladefinitionTaskRole432BE949",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/valhalla-definition/Resource"
   }
  },
  "valhalladefinitionvalhallacontainerLogGroup568AA80C": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/valhalla-definition/valhalla-container/LogGroup/Resource"
   }
  },
  "valhallafargateService4BFB4F4D": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "Ec2ClusterEE43E89D"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "valhallafargateSecurityGroupAA99737A",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "vpcPrivateSubnet1Subnet934893E8"
       },
       {
        "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "valhalladefinitionC2668EC9"
    }
   },
   "DependsOn": [
    "valhalladefinitionTaskRole432BE949"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/valhalla-fargate/Service"
   }
  },
  "valhallafargateSecurityGroupAA99737A": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "transit-drivecycle/valhalla-fargate/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "DependsOn": [
    "valhalladefinitionTaskRole432BE949"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/valhalla-fargate/SecurityGroup/Resource"
   }
  },
  "frontendLB0DEB56B5": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "frontendLBSecurityGroupC1470050",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "vpcPublicSubnet1Subnet2E65531E"
     },
     {
      "Ref": "vpcPublicSubnet2Subnet009B674F"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "vpcPublicSubnet1DefaultRoute10708846",
    "vpcPublicSubnet1RouteTableAssociation5D3F4579",
    "vpcPublicSubnet2DefaultRouteA1EC0F60",
    "vpcPublicSubnet2RouteTableAssociation21F81B59"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/LB/Resource"
   }
  },
  "frontendLBSecurityGroupC1470050": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB transitdrivecyclefrontendLB2354C295",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/LB/SecurityGroup/Resource"
   }
  },
  "frontendLBSecurityGrouptotransitdrivecyclefrontendServiceSecurityGroup1253FD6480C539CF77": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "frontendServiceSecurityGroup3EDE8AB9",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "frontendLBSecurityGroupC1470050",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/LB/SecurityGroup/to transitdrivecyclefrontendServiceSecurityGroup1253FD64:80"
   }
  },
  "frontendLBPublicListener6A79883F": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "frontendLBPublicListenerECSGroup42546B4B"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "frontendLB0DEB56B5"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/LB/PublicListener/Resource"
   }
  },
  "frontendLBPublicListenerECSGroup42546B4B": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "frontendTaskDefTaskRole5EB1E157": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/TaskDef/TaskRole/Resource"
   }
  },
  "frontendTaskDef29FB22C4": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6c03902d89633df0728ca314e607a18e4435ee28bc8e590a38b56c4929393c77"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "frontendTaskDefwebLogGroup9A2D3B2E"
        },
        "awslogs-stream-prefix": "frontend",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/ecsTaskExecutionRole"
      ]
     ]
    },
    "Family": "transitdrivecyclefrontendTaskDef60F80A10",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "frontendTaskDefTaskRole5EB1E157",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/TaskDef/Resource"
   }
  },
  "frontendTaskDefwebLogGroup9A2D3B2E": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/TaskDef/web/LogGroup/Resource"
   }
  },
  "frontendService12C63704": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "Ec2ClusterEE43E89D"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "frontendLBPublicListenerECSGroup42546B4B"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "frontendServiceSecurityGroup3EDE8AB9",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "vpcPrivateSubnet1Subnet934893E8"
       },
       {
        "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "frontendTaskDef29FB22C4"
    }
   },
   "DependsOn": [
    "frontendLBPublicListenerECSGroup42546B4B",
    "frontendLBPublicListener6A79883F",
    "frontendTaskDefTaskRole5EB1E157"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/Service/Service"
   }
  },
  "frontendServiceSecurityGroup3EDE8AB9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "transit-drivecycle/frontend/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "DependsOn": [
    "frontendTaskDefTaskRole5EB1E157"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/Service/SecurityGroup/Resource"
   }
  },
  "frontendServiceSecurityGroupfromtransitdrivecyclefrontendLBSecurityGroup4DF53905807E989308": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "frontendServiceSecurityGroup3EDE8AB9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "frontendLBSecurityGroupC1470050",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "DependsOn": [
    "frontendTaskDefTaskRole5EB1E157"
   ],
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/frontend/Service/SecurityGroup/from transitdrivecyclefrontendLBSecurityGroup4DF53905:80"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SXU/DMAz8LbxngQ3xA8b40CQEVYd4ndzMK2ZdUiXO0FT1v+O0K6sA8ZTL5RKfL57p6fRGX13AZ5iYzW5SUaGbFYPZKaHWDZqZbt5qoxZb+5YtVBaLiswqFhY5cWeUu8j4CkWFZ/7MzUNwhoDJ2W9xAvfLLC3PwI/A+AlHlXk6CDw/vLSMXvAg6J2cdnMWr+97tKxWaKInPj56F+vOw7/EfekxhF/00nZ8q9AE3SyqGKR6Ug3wAXwJqauwu8MtWRp6+sk4y0AW/Yg73V2hP5Dpc+phqwj2usmchNt1eEK56+NMa7Lk1xACctB3zuzQL/dQpmglKDnTOdYuEDt/vIWAqnKltPDkyu8ABtx1t66BU7JBz+taqnWf8+RgcwsVWIObH26xgsBkKlEUnYJseZDp+Pu27+uN9mMdSZT2pBnw6PxVKsuHD7ZH27ZVOQYXvRjqGpdZLcVIkr1ErmM/i4Mk/Zuzmy79VmVHfnf28lpPZzLyH4Fo4qNl2qPO+/UL/al5oA8DAAA="
   },
   "Metadata": {
    "aws:cdk:path": "transit-drivecycle/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "frontendLoadBalancerDNSCF47B434": {
   "Value": {
    "Fn::GetAtt": [
     "frontendLB0DEB56B5",
     "DNSName"
    ]
   }
  },
  "frontendServiceURL5D30442A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "frontendLB0DEB56B5",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "LoadBalancerDNS": {
   "Value": {
    "Fn::GetAtt": [
     "frontendLB0DEB56B5",
     "DNSName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}